name: release

# This workflow will run:
#   - When you push a v* tag:
#     - If the tag is on your default branch, images will be tagged with majorMinorPatch, major.minor, major, latest, and sha.
#     - If the tag is on a non-default branch, the image will be tagged with the full semVer (e.g., v1.2.3-beta.1) and sha. 
#     - If this branch is master, edge will also be tagged.
#   - When you push a commit to the master branch (that is not a tag):
#     - Only the edge and sha tags will be applied to the Docker image. 
#     - The version-specific tags (latest, X.Y.Z, etc.) will not be created because github.ref_type will be branch, not tag.

on:
  push:
    branches:
      - 'master'  # For `edge` builds    
    tags:
      - 'v*'  # For tagged releases

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/deucalion

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Disable shallow fetch (required for GitVersion)

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3
      with:
        versionSpec: '6.x'

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v3
      with:
        useConfigFile: true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ steps.gitversion.outputs.semVer }},enable=${{ github.ref_type == 'tag' && steps.gitversion.outputs.branchName != github.event.repository.default_branch }}

          type=raw,value=${{ steps.gitversion.outputs.majorMinorPatch }},enable=${{ github.ref_type == 'tag' && steps.gitversion.outputs.branchName == github.event.repository.default_branch }}
          type=raw,value=${{ steps.gitversion.outputs.major }}.${{ steps.gitversion.outputs.minor }},enable=${{ github.ref_type == 'tag' && steps.gitversion.outputs.branchName == github.event.repository.default_branch }}
          type=raw,value=${{ steps.gitversion.outputs.major }},enable=${{ github.ref_type == 'tag' && steps.gitversion.outputs.branchName == github.event.repository.default_branch }}
          type=raw,value=latest,enable=${{ github.ref_type == 'tag' && steps.gitversion.outputs.branchName == github.event.repository.default_branch }}
          
          type=edge
          type=sha

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ./src
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${{ steps.gitversion.outputs.semVer }}
          INFORMATIONAL_VERSION=${{ steps.gitversion.outputs.informationalVersion }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
